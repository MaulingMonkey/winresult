// WARNING: this file is auto-generated by xtask gen and may be overwritten

use super::*;


/// Errors occurred accessing one or more objects - the ErrorInfo collection may have more detail
pub const E_OBJECTERRORS : HRESULT = HRESULT::from_constant(0x80110401); // COMADMIN_E_OBJECTERRORS

/// One or more of the object's properties are missing or invalid
pub const E_OBJECTINVALID : HRESULT = HRESULT::from_constant(0x80110402); // COMADMIN_E_OBJECTINVALID

/// The object was not found in the catalog
pub const E_KEYMISSING : HRESULT = HRESULT::from_constant(0x80110403); // COMADMIN_E_KEYMISSING

/// The object is already registered
pub const E_ALREADYINSTALLED : HRESULT = HRESULT::from_constant(0x80110404); // COMADMIN_E_ALREADYINSTALLED

/// Error occurred writing to the application file
pub const E_APP_FILE_WRITEFAIL : HRESULT = HRESULT::from_constant(0x80110407); // COMADMIN_E_APP_FILE_WRITEFAIL

/// Error occurred reading the application file
pub const E_APP_FILE_READFAIL : HRESULT = HRESULT::from_constant(0x80110408); // COMADMIN_E_APP_FILE_READFAIL

/// Invalid version number in application file
pub const E_APP_FILE_VERSION : HRESULT = HRESULT::from_constant(0x80110409); // COMADMIN_E_APP_FILE_VERSION

/// The file path is invalid
pub const E_BADPATH : HRESULT = HRESULT::from_constant(0x8011040A); // COMADMIN_E_BADPATH

/// The application is already installed
pub const E_APPLICATIONEXISTS : HRESULT = HRESULT::from_constant(0x8011040B); // COMADMIN_E_APPLICATIONEXISTS

/// The role already exists
pub const E_ROLEEXISTS : HRESULT = HRESULT::from_constant(0x8011040C); // COMADMIN_E_ROLEEXISTS

/// An error occurred copying the file
pub const E_CANTCOPYFILE : HRESULT = HRESULT::from_constant(0x8011040D); // COMADMIN_E_CANTCOPYFILE

/// One or more users are not valid
pub const E_NOUSER : HRESULT = HRESULT::from_constant(0x8011040F); // COMADMIN_E_NOUSER

/// One or more users in the application file are not valid
pub const E_INVALIDUSERIDS : HRESULT = HRESULT::from_constant(0x80110410); // COMADMIN_E_INVALIDUSERIDS

/// The component's CLSID is missing or corrupt
pub const E_NOREGISTRYCLSID : HRESULT = HRESULT::from_constant(0x80110411); // COMADMIN_E_NOREGISTRYCLSID

/// The component's progID is missing or corrupt
pub const E_BADREGISTRYPROGID : HRESULT = HRESULT::from_constant(0x80110412); // COMADMIN_E_BADREGISTRYPROGID

/// Unable to set required authentication level for update request
pub const E_AUTHENTICATIONLEVEL : HRESULT = HRESULT::from_constant(0x80110413); // COMADMIN_E_AUTHENTICATIONLEVEL

/// The identity or password set on the application is not valid
pub const E_USERPASSWDNOTVALID : HRESULT = HRESULT::from_constant(0x80110414); // COMADMIN_E_USERPASSWDNOTVALID

/// Application file CLSIDs or IIDs do not match corresponding DLLs
pub const E_CLSIDORIIDMISMATCH : HRESULT = HRESULT::from_constant(0x80110418); // COMADMIN_E_CLSIDORIIDMISMATCH

/// Interface information is either missing or changed
pub const E_REMOTEINTERFACE : HRESULT = HRESULT::from_constant(0x80110419); // COMADMIN_E_REMOTEINTERFACE

/// DllRegisterServer failed on component install
pub const E_DLLREGISTERSERVER : HRESULT = HRESULT::from_constant(0x8011041A); // COMADMIN_E_DLLREGISTERSERVER

/// No server file share available
pub const E_NOSERVERSHARE : HRESULT = HRESULT::from_constant(0x8011041B); // COMADMIN_E_NOSERVERSHARE

/// DLL could not be loaded
pub const E_DLLLOADFAILED : HRESULT = HRESULT::from_constant(0x8011041D); // COMADMIN_E_DLLLOADFAILED

/// The registered TypeLib ID is not valid
pub const E_BADREGISTRYLIBID : HRESULT = HRESULT::from_constant(0x8011041E); // COMADMIN_E_BADREGISTRYLIBID

/// Application install directory not found
pub const E_APPDIRNOTFOUND : HRESULT = HRESULT::from_constant(0x8011041F); // COMADMIN_E_APPDIRNOTFOUND

/// Errors occurred while in the component registrar
pub const E_REGISTRARFAILED : HRESULT = HRESULT::from_constant(0x80110423); // COMADMIN_E_REGISTRARFAILED

/// The file does not exist
pub const E_COMPFILE_DOESNOTEXIST : HRESULT = HRESULT::from_constant(0x80110424); // COMADMIN_E_COMPFILE_DOESNOTEXIST

/// The DLL could not be loaded
pub const E_COMPFILE_LOADDLLFAIL : HRESULT = HRESULT::from_constant(0x80110425); // COMADMIN_E_COMPFILE_LOADDLLFAIL

/// GetClassObject failed in the DLL
pub const E_COMPFILE_GETCLASSOBJ : HRESULT = HRESULT::from_constant(0x80110426); // COMADMIN_E_COMPFILE_GETCLASSOBJ

/// The DLL does not support the components listed in the TypeLib
pub const E_COMPFILE_CLASSNOTAVAIL : HRESULT = HRESULT::from_constant(0x80110427); // COMADMIN_E_COMPFILE_CLASSNOTAVAIL

/// The TypeLib could not be loaded
pub const E_COMPFILE_BADTLB : HRESULT = HRESULT::from_constant(0x80110428); // COMADMIN_E_COMPFILE_BADTLB

/// The file does not contain components or component information
pub const E_COMPFILE_NOTINSTALLABLE : HRESULT = HRESULT::from_constant(0x80110429); // COMADMIN_E_COMPFILE_NOTINSTALLABLE

/// Changes to this object and its sub-objects have been disabled
pub const E_NOTCHANGEABLE : HRESULT = HRESULT::from_constant(0x8011042A); // COMADMIN_E_NOTCHANGEABLE

/// The delete function has been disabled for this object
pub const E_NOTDELETEABLE : HRESULT = HRESULT::from_constant(0x8011042B); // COMADMIN_E_NOTDELETEABLE

/// The server catalog version is not supported
pub const E_SESSION : HRESULT = HRESULT::from_constant(0x8011042C); // COMADMIN_E_SESSION

/// The component move was disallowed, because the source or destination application is either a system application or currently locked against changes
pub const E_COMP_MOVE_LOCKED : HRESULT = HRESULT::from_constant(0x8011042D); // COMADMIN_E_COMP_MOVE_LOCKED

/// The component move failed because the destination application no longer exists
pub const E_COMP_MOVE_BAD_DEST : HRESULT = HRESULT::from_constant(0x8011042E); // COMADMIN_E_COMP_MOVE_BAD_DEST

/// The system was unable to register the TypeLib
pub const E_REGISTERTLB : HRESULT = HRESULT::from_constant(0x80110430); // COMADMIN_E_REGISTERTLB

/// This operation cannot be performed on the system application
pub const E_SYSTEMAPP : HRESULT = HRESULT::from_constant(0x80110433); // COMADMIN_E_SYSTEMAPP

/// The component registrar referenced in this file is not available
pub const E_COMPFILE_NOREGISTRAR : HRESULT = HRESULT::from_constant(0x80110434); // COMADMIN_E_COMPFILE_NOREGISTRAR

/// A component in the same DLL is already installed
pub const E_COREQCOMPINSTALLED : HRESULT = HRESULT::from_constant(0x80110435); // COMADMIN_E_COREQCOMPINSTALLED

/// The service is not installed
pub const E_SERVICENOTINSTALLED : HRESULT = HRESULT::from_constant(0x80110436); // COMADMIN_E_SERVICENOTINSTALLED

/// One or more property settings are either invalid or in conflict with each other
pub const E_PROPERTYSAVEFAILED : HRESULT = HRESULT::from_constant(0x80110437); // COMADMIN_E_PROPERTYSAVEFAILED

/// The object you are attempting to add or rename already exists
pub const E_OBJECTEXISTS : HRESULT = HRESULT::from_constant(0x80110438); // COMADMIN_E_OBJECTEXISTS

/// The component already exists
pub const E_COMPONENTEXISTS : HRESULT = HRESULT::from_constant(0x80110439); // COMADMIN_E_COMPONENTEXISTS

/// The registration file is corrupt
pub const E_REGFILE_CORRUPT : HRESULT = HRESULT::from_constant(0x8011043B); // COMADMIN_E_REGFILE_CORRUPT

/// The property value is too large
pub const E_PROPERTY_OVERFLOW : HRESULT = HRESULT::from_constant(0x8011043C); // COMADMIN_E_PROPERTY_OVERFLOW

/// Object was not found in registry
pub const E_NOTINREGISTRY : HRESULT = HRESULT::from_constant(0x8011043E); // COMADMIN_E_NOTINREGISTRY

/// This object is not poolable
pub const E_OBJECTNOTPOOLABLE : HRESULT = HRESULT::from_constant(0x8011043F); // COMADMIN_E_OBJECTNOTPOOLABLE

/// A CLSID with the same GUID as the new application ID is already installed on this machine
pub const E_APPLID_MATCHES_CLSID : HRESULT = HRESULT::from_constant(0x80110446); // COMADMIN_E_APPLID_MATCHES_CLSID

/// A role assigned to a component, interface, or method did not exist in the application
pub const E_ROLE_DOES_NOT_EXIST : HRESULT = HRESULT::from_constant(0x80110447); // COMADMIN_E_ROLE_DOES_NOT_EXIST

/// You must have components in an application in order to start the application
pub const E_START_APP_NEEDS_COMPONENTS : HRESULT = HRESULT::from_constant(0x80110448); // COMADMIN_E_START_APP_NEEDS_COMPONENTS

/// This operation is not enabled on this platform
pub const E_REQUIRES_DIFFERENT_PLATFORM : HRESULT = HRESULT::from_constant(0x80110449); // COMADMIN_E_REQUIRES_DIFFERENT_PLATFORM

/// Application Proxy is not exportable
pub const E_CAN_NOT_EXPORT_APP_PROXY : HRESULT = HRESULT::from_constant(0x8011044A); // COMADMIN_E_CAN_NOT_EXPORT_APP_PROXY

/// Failed to start application because it is either a library application or an application proxy
pub const E_CAN_NOT_START_APP : HRESULT = HRESULT::from_constant(0x8011044B); // COMADMIN_E_CAN_NOT_START_APP

/// System application is not exportable
pub const E_CAN_NOT_EXPORT_SYS_APP : HRESULT = HRESULT::from_constant(0x8011044C); // COMADMIN_E_CAN_NOT_EXPORT_SYS_APP

/// Cannot subscribe to this component (the component may have been imported)
pub const E_CANT_SUBSCRIBE_TO_COMPONENT : HRESULT = HRESULT::from_constant(0x8011044D); // COMADMIN_E_CANT_SUBSCRIBE_TO_COMPONENT

/// An event class cannot also be a subscriber component
pub const E_EVENTCLASS_CANT_BE_SUBSCRIBER : HRESULT = HRESULT::from_constant(0x8011044E); // COMADMIN_E_EVENTCLASS_CANT_BE_SUBSCRIBER

/// Library applications and application proxies are incompatible
pub const E_LIB_APP_PROXY_INCOMPATIBLE : HRESULT = HRESULT::from_constant(0x8011044F); // COMADMIN_E_LIB_APP_PROXY_INCOMPATIBLE

/// This function is valid for the base partition only
pub const E_BASE_PARTITION_ONLY : HRESULT = HRESULT::from_constant(0x80110450); // COMADMIN_E_BASE_PARTITION_ONLY

/// You cannot start an application that has been disabled
pub const E_START_APP_DISABLED : HRESULT = HRESULT::from_constant(0x80110451); // COMADMIN_E_START_APP_DISABLED

/// The specified partition name is already in use on this computer
pub const E_CAT_DUPLICATE_PARTITION_NAME : HRESULT = HRESULT::from_constant(0x80110457); // COMADMIN_E_CAT_DUPLICATE_PARTITION_NAME

/// The specified partition name is invalid. Check that the name contains at least one visible character
pub const E_CAT_INVALID_PARTITION_NAME : HRESULT = HRESULT::from_constant(0x80110458); // COMADMIN_E_CAT_INVALID_PARTITION_NAME

/// The partition cannot be deleted because it is the default partition for one or more users
pub const E_CAT_PARTITION_IN_USE : HRESULT = HRESULT::from_constant(0x80110459); // COMADMIN_E_CAT_PARTITION_IN_USE

/// The partition cannot be exported, because one or more components in the partition have the same file name
pub const E_FILE_PARTITION_DUPLICATE_FILES : HRESULT = HRESULT::from_constant(0x8011045A); // COMADMIN_E_FILE_PARTITION_DUPLICATE_FILES

/// Applications that contain one or more imported components cannot be installed into a non-base partition
pub const E_CAT_IMPORTED_COMPONENTS_NOT_ALLOWED : HRESULT = HRESULT::from_constant(0x8011045B); // COMADMIN_E_CAT_IMPORTED_COMPONENTS_NOT_ALLOWED

/// The application name is not unique and cannot be resolved to an application id
pub const E_AMBIGUOUS_APPLICATION_NAME : HRESULT = HRESULT::from_constant(0x8011045C); // COMADMIN_E_AMBIGUOUS_APPLICATION_NAME

/// The partition name is not unique and cannot be resolved to a partition id
pub const E_AMBIGUOUS_PARTITION_NAME : HRESULT = HRESULT::from_constant(0x8011045D); // COMADMIN_E_AMBIGUOUS_PARTITION_NAME

/// The COM+ registry database has not been initialized
pub const E_REGDB_NOTINITIALIZED : HRESULT = HRESULT::from_constant(0x80110472); // COMADMIN_E_REGDB_NOTINITIALIZED

/// The COM+ registry database is not open
pub const E_REGDB_NOTOPEN : HRESULT = HRESULT::from_constant(0x80110473); // COMADMIN_E_REGDB_NOTOPEN

/// The COM+ registry database detected a system error
pub const E_REGDB_SYSTEMERR : HRESULT = HRESULT::from_constant(0x80110474); // COMADMIN_E_REGDB_SYSTEMERR

/// The COM+ registry database is already running
pub const E_REGDB_ALREADYRUNNING : HRESULT = HRESULT::from_constant(0x80110475); // COMADMIN_E_REGDB_ALREADYRUNNING

/// This version of the COM+ registry database cannot be migrated
pub const E_MIG_VERSIONNOTSUPPORTED : HRESULT = HRESULT::from_constant(0x80110480); // COMADMIN_E_MIG_VERSIONNOTSUPPORTED

/// The schema version to be migrated could not be found in the COM+ registry database
pub const E_MIG_SCHEMANOTFOUND : HRESULT = HRESULT::from_constant(0x80110481); // COMADMIN_E_MIG_SCHEMANOTFOUND

/// There was a type mismatch between binaries
pub const E_CAT_BITNESSMISMATCH : HRESULT = HRESULT::from_constant(0x80110482); // COMADMIN_E_CAT_BITNESSMISMATCH

/// A binary of unknown or invalid type was provided
pub const E_CAT_UNACCEPTABLEBITNESS : HRESULT = HRESULT::from_constant(0x80110483); // COMADMIN_E_CAT_UNACCEPTABLEBITNESS

/// There was a type mismatch between a binary and an application
pub const E_CAT_WRONGAPPBITNESS : HRESULT = HRESULT::from_constant(0x80110484); // COMADMIN_E_CAT_WRONGAPPBITNESS

/// The application cannot be paused or resumed
pub const E_CAT_PAUSE_RESUME_NOT_SUPPORTED : HRESULT = HRESULT::from_constant(0x80110485); // COMADMIN_E_CAT_PAUSE_RESUME_NOT_SUPPORTED

/// The COM+ Catalog Server threw an exception during execution
pub const E_CAT_SERVERFAULT : HRESULT = HRESULT::from_constant(0x80110486); // COMADMIN_E_CAT_SERVERFAULT

/// One of the objects being inserted or updated does not belong to a valid parent collection
pub const E_OBJECT_PARENT_MISSING : HRESULT = HRESULT::from_constant(0x80110808); // COMADMIN_E_OBJECT_PARENT_MISSING

/// One of the specified objects cannot be found
pub const E_OBJECT_DOES_NOT_EXIST : HRESULT = HRESULT::from_constant(0x80110809); // COMADMIN_E_OBJECT_DOES_NOT_EXIST

/// The specified application is not currently running
pub const E_APP_NOT_RUNNING : HRESULT = HRESULT::from_constant(0x8011080A); // COMADMIN_E_APP_NOT_RUNNING

/// The partition(s) specified are not valid.
pub const E_INVALID_PARTITION : HRESULT = HRESULT::from_constant(0x8011080B); // COMADMIN_E_INVALID_PARTITION

/// COM+ applications that run as NT service may not be pooled or recycled
pub const E_SVCAPP_NOT_POOLABLE_OR_RECYCLABLE : HRESULT = HRESULT::from_constant(0x8011080D); // COMADMIN_E_SVCAPP_NOT_POOLABLE_OR_RECYCLABLE

/// One or more users are already assigned to a local partition set.
pub const E_USER_IN_SET : HRESULT = HRESULT::from_constant(0x8011080E); // COMADMIN_E_USER_IN_SET

/// Library applications may not be recycled.
pub const E_CANTRECYCLELIBRARYAPPS : HRESULT = HRESULT::from_constant(0x8011080F); // COMADMIN_E_CANTRECYCLELIBRARYAPPS

/// Applications running as NT services may not be recycled.
pub const E_CANTRECYCLESERVICEAPPS : HRESULT = HRESULT::from_constant(0x80110811); // COMADMIN_E_CANTRECYCLESERVICEAPPS

/// The process has already been recycled.
pub const E_PROCESSALREADYRECYCLED : HRESULT = HRESULT::from_constant(0x80110812); // COMADMIN_E_PROCESSALREADYRECYCLED

/// A paused process may not be recycled.
pub const E_PAUSEDPROCESSMAYNOTBERECYCLED : HRESULT = HRESULT::from_constant(0x80110813); // COMADMIN_E_PAUSEDPROCESSMAYNOTBERECYCLED

/// Library applications may not be NT services.
pub const E_CANTMAKEINPROCSERVICE : HRESULT = HRESULT::from_constant(0x80110814); // COMADMIN_E_CANTMAKEINPROCSERVICE

/// The ProgID provided to the copy operation is invalid. The ProgID is in use by another registered CLSID.
pub const E_PROGIDINUSEBYCLSID : HRESULT = HRESULT::from_constant(0x80110815); // COMADMIN_E_PROGIDINUSEBYCLSID

/// The partition specified as default is not a member of the partition set.
pub const E_DEFAULT_PARTITION_NOT_IN_SET : HRESULT = HRESULT::from_constant(0x80110816); // COMADMIN_E_DEFAULT_PARTITION_NOT_IN_SET

/// A recycled process may not be paused.
pub const E_RECYCLEDPROCESSMAYNOTBEPAUSED : HRESULT = HRESULT::from_constant(0x80110817); // COMADMIN_E_RECYCLEDPROCESSMAYNOTBEPAUSED

/// Access to the specified partition is denied.
pub const E_PARTITION_ACCESSDENIED : HRESULT = HRESULT::from_constant(0x80110818); // COMADMIN_E_PARTITION_ACCESSDENIED

/// Only Application Files (\*.MSI files) can be installed into partitions.
pub const E_PARTITION_MSI_ONLY : HRESULT = HRESULT::from_constant(0x80110819); // COMADMIN_E_PARTITION_MSI_ONLY

/// Applications containing one or more legacy components may not be exported to 1.0 format.
pub const E_LEGACYCOMPS_NOT_ALLOWED_IN_1_0_FORMAT : HRESULT = HRESULT::from_constant(0x8011081A); // COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_1_0_FORMAT

/// Legacy components may not exist in non-base partitions.
pub const E_LEGACYCOMPS_NOT_ALLOWED_IN_NONBASE_PARTITIONS : HRESULT = HRESULT::from_constant(0x8011081B); // COMADMIN_E_LEGACYCOMPS_NOT_ALLOWED_IN_NONBASE_PARTITIONS

/// A component cannot be moved (or copied) from the System Application, an application proxy or a non-changeable application
pub const E_COMP_MOVE_SOURCE : HRESULT = HRESULT::from_constant(0x8011081C); // COMADMIN_E_COMP_MOVE_SOURCE

/// A component cannot be moved (or copied) to the System Application, an application proxy or a non-changeable application
pub const E_COMP_MOVE_DEST : HRESULT = HRESULT::from_constant(0x8011081D); // COMADMIN_E_COMP_MOVE_DEST

/// A private component cannot be moved (or copied) to a library application or to the base partition
pub const E_COMP_MOVE_PRIVATE : HRESULT = HRESULT::from_constant(0x8011081E); // COMADMIN_E_COMP_MOVE_PRIVATE

/// The Base Application Partition exists in all partition sets and cannot be removed.
pub const E_BASEPARTITION_REQUIRED_IN_SET : HRESULT = HRESULT::from_constant(0x8011081F); // COMADMIN_E_BASEPARTITION_REQUIRED_IN_SET

/// Alas, Event Class components cannot be aliased.
pub const E_CANNOT_ALIAS_EVENTCLASS : HRESULT = HRESULT::from_constant(0x80110820); // COMADMIN_E_CANNOT_ALIAS_EVENTCLASS

/// Access is denied because the component is private.
pub const E_PRIVATE_ACCESSDENIED : HRESULT = HRESULT::from_constant(0x80110821); // COMADMIN_E_PRIVATE_ACCESSDENIED

/// The specified SAFER level is invalid.
pub const E_SAFERINVALID : HRESULT = HRESULT::from_constant(0x80110822); // COMADMIN_E_SAFERINVALID

/// The specified user cannot write to the system registry
pub const E_REGISTRY_ACCESSDENIED : HRESULT = HRESULT::from_constant(0x80110823); // COMADMIN_E_REGISTRY_ACCESSDENIED

/// COM+ partitions are currently disabled.
pub const E_PARTITIONS_DISABLED : HRESULT = HRESULT::from_constant(0x80110824); // COMADMIN_E_PARTITIONS_DISABLED
