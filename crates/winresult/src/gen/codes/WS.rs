// WARNING: this file is auto-generated by xtask gen and may be overwritten

use super::*;


/// The function call is completing asynchronously.
pub const S_ASYNC : SuccessHResult = SuccessHResult::from_constant(0x003D0000); // WS_S_ASYNC

/// There are no more messages available on the channel.
pub const S_END : SuccessHResult = SuccessHResult::from_constant(0x003D0001); // WS_S_END

/// The input data was not in the expected format or did not have the expected value.
pub const E_INVALID_FORMAT : ErrorHResult = ErrorHResult::from_constant(0x803D0000); // WS_E_INVALID_FORMAT

/// The operation could not be completed because the object is in a faulted state due to a previous error.
pub const E_OBJECT_FAULTED : ErrorHResult = ErrorHResult::from_constant(0x803D0001); // WS_E_OBJECT_FAULTED

/// The operation could not be completed because it would lead to numeric overflow.
pub const E_NUMERIC_OVERFLOW : ErrorHResult = ErrorHResult::from_constant(0x803D0002); // WS_E_NUMERIC_OVERFLOW

/// The operation is not allowed due to the current state of the object.
pub const E_INVALID_OPERATION : ErrorHResult = ErrorHResult::from_constant(0x803D0003); // WS_E_INVALID_OPERATION

/// The operation was aborted.
pub const E_OPERATION_ABORTED : ErrorHResult = ErrorHResult::from_constant(0x803D0004); // WS_E_OPERATION_ABORTED

/// Access was denied by the remote endpoint.
pub const E_ENDPOINT_ACCESS_DENIED : ErrorHResult = ErrorHResult::from_constant(0x803D0005); // WS_E_ENDPOINT_ACCESS_DENIED

/// The operation did not complete within the time allotted.
pub const E_OPERATION_TIMED_OUT : ErrorHResult = ErrorHResult::from_constant(0x803D0006); // WS_E_OPERATION_TIMED_OUT

/// The operation was abandoned.
pub const E_OPERATION_ABANDONED : ErrorHResult = ErrorHResult::from_constant(0x803D0007); // WS_E_OPERATION_ABANDONED

/// A quota was exceeded.
pub const E_QUOTA_EXCEEDED : ErrorHResult = ErrorHResult::from_constant(0x803D0008); // WS_E_QUOTA_EXCEEDED

/// The information was not available in the specified language.
pub const E_NO_TRANSLATION_AVAILABLE : ErrorHResult = ErrorHResult::from_constant(0x803D0009); // WS_E_NO_TRANSLATION_AVAILABLE

/// Security verification was not successful for the received data.
pub const E_SECURITY_VERIFICATION_FAILURE : ErrorHResult = ErrorHResult::from_constant(0x803D000A); // WS_E_SECURITY_VERIFICATION_FAILURE

/// The address is already being used.
pub const E_ADDRESS_IN_USE : ErrorHResult = ErrorHResult::from_constant(0x803D000B); // WS_E_ADDRESS_IN_USE

/// The address is not valid for this context.
pub const E_ADDRESS_NOT_AVAILABLE : ErrorHResult = ErrorHResult::from_constant(0x803D000C); // WS_E_ADDRESS_NOT_AVAILABLE

/// The remote endpoint does not exist or could not be located.
pub const E_ENDPOINT_NOT_FOUND : ErrorHResult = ErrorHResult::from_constant(0x803D000D); // WS_E_ENDPOINT_NOT_FOUND

/// The remote endpoint is not currently in service at this location.
pub const E_ENDPOINT_NOT_AVAILABLE : ErrorHResult = ErrorHResult::from_constant(0x803D000E); // WS_E_ENDPOINT_NOT_AVAILABLE

/// The remote endpoint could not process the request.
pub const E_ENDPOINT_FAILURE : ErrorHResult = ErrorHResult::from_constant(0x803D000F); // WS_E_ENDPOINT_FAILURE

/// The remote endpoint was not reachable.
pub const E_ENDPOINT_UNREACHABLE : ErrorHResult = ErrorHResult::from_constant(0x803D0010); // WS_E_ENDPOINT_UNREACHABLE

/// The operation was not supported by the remote endpoint.
pub const E_ENDPOINT_ACTION_NOT_SUPPORTED : ErrorHResult = ErrorHResult::from_constant(0x803D0011); // WS_E_ENDPOINT_ACTION_NOT_SUPPORTED

/// The remote endpoint is unable to process the request due to being overloaded.
pub const E_ENDPOINT_TOO_BUSY : ErrorHResult = ErrorHResult::from_constant(0x803D0012); // WS_E_ENDPOINT_TOO_BUSY

/// A message containing a fault was received from the remote endpoint.
pub const E_ENDPOINT_FAULT_RECEIVED : ErrorHResult = ErrorHResult::from_constant(0x803D0013); // WS_E_ENDPOINT_FAULT_RECEIVED

/// The connection with the remote endpoint was terminated.
pub const E_ENDPOINT_DISCONNECTED : ErrorHResult = ErrorHResult::from_constant(0x803D0014); // WS_E_ENDPOINT_DISCONNECTED

/// The HTTP proxy server could not process the request.
pub const E_PROXY_FAILURE : ErrorHResult = ErrorHResult::from_constant(0x803D0015); // WS_E_PROXY_FAILURE

/// Access was denied by the HTTP proxy server.
pub const E_PROXY_ACCESS_DENIED : ErrorHResult = ErrorHResult::from_constant(0x803D0016); // WS_E_PROXY_ACCESS_DENIED

/// The requested feature is not available on this platform.
pub const E_NOT_SUPPORTED : ErrorHResult = ErrorHResult::from_constant(0x803D0017); // WS_E_NOT_SUPPORTED

/// The HTTP proxy server requires HTTP authentication scheme 'basic'.
pub const E_PROXY_REQUIRES_BASIC_AUTH : ErrorHResult = ErrorHResult::from_constant(0x803D0018); // WS_E_PROXY_REQUIRES_BASIC_AUTH

/// The HTTP proxy server requires HTTP authentication scheme 'digest'.
pub const E_PROXY_REQUIRES_DIGEST_AUTH : ErrorHResult = ErrorHResult::from_constant(0x803D0019); // WS_E_PROXY_REQUIRES_DIGEST_AUTH

/// The HTTP proxy server requires HTTP authentication scheme 'NTLM'.
pub const E_PROXY_REQUIRES_NTLM_AUTH : ErrorHResult = ErrorHResult::from_constant(0x803D001A); // WS_E_PROXY_REQUIRES_NTLM_AUTH

/// The HTTP proxy server requires HTTP authentication scheme 'negotiate'.
pub const E_PROXY_REQUIRES_NEGOTIATE_AUTH : ErrorHResult = ErrorHResult::from_constant(0x803D001B); // WS_E_PROXY_REQUIRES_NEGOTIATE_AUTH

/// The remote endpoint requires HTTP authentication scheme 'basic'.
pub const E_SERVER_REQUIRES_BASIC_AUTH : ErrorHResult = ErrorHResult::from_constant(0x803D001C); // WS_E_SERVER_REQUIRES_BASIC_AUTH

/// The remote endpoint requires HTTP authentication scheme 'digest'.
pub const E_SERVER_REQUIRES_DIGEST_AUTH : ErrorHResult = ErrorHResult::from_constant(0x803D001D); // WS_E_SERVER_REQUIRES_DIGEST_AUTH

/// The remote endpoint requires HTTP authentication scheme 'NTLM'.
pub const E_SERVER_REQUIRES_NTLM_AUTH : ErrorHResult = ErrorHResult::from_constant(0x803D001E); // WS_E_SERVER_REQUIRES_NTLM_AUTH

/// The remote endpoint requires HTTP authentication scheme 'negotiate'.
pub const E_SERVER_REQUIRES_NEGOTIATE_AUTH : ErrorHResult = ErrorHResult::from_constant(0x803D001F); // WS_E_SERVER_REQUIRES_NEGOTIATE_AUTH

/// The endpoint address URL is invalid.
pub const E_INVALID_ENDPOINT_URL : ErrorHResult = ErrorHResult::from_constant(0x803D0020); // WS_E_INVALID_ENDPOINT_URL

/// Unrecognized error occurred in the Windows Web Services framework.
pub const E_OTHER : ErrorHResult = ErrorHResult::from_constant(0x803D0021); // WS_E_OTHER

/// A security token was rejected by the server because it has expired.
pub const E_SECURITY_TOKEN_EXPIRED : ErrorHResult = ErrorHResult::from_constant(0x803D0022); // WS_E_SECURITY_TOKEN_EXPIRED

/// A security operation failed in the Windows Web Services framework.
pub const E_SECURITY_SYSTEM_FAILURE : ErrorHResult = ErrorHResult::from_constant(0x803D0023); // WS_E_SECURITY_SYSTEM_FAILURE
