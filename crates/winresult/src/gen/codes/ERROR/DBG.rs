// WARNING: this file is auto-generated by xtask gen and may be overwritten

use super::*;


/// Debugger did not handle the exception.
pub const EXCEPTION_NOT_HANDLED : ErrorCode = ErrorCode::from_constant(688); // ERROR_DBG_EXCEPTION_NOT_HANDLED

/// Debugger will reply later.
pub const REPLY_LATER : ErrorCode = ErrorCode::from_constant(689); // ERROR_DBG_REPLY_LATER

/// Debugger cannot provide handle.
pub const UNABLE_TO_PROVIDE_HANDLE : ErrorCode = ErrorCode::from_constant(690); // ERROR_DBG_UNABLE_TO_PROVIDE_HANDLE

/// Debugger terminated thread.
pub const TERMINATE_THREAD : ErrorCode = ErrorCode::from_constant(691); // ERROR_DBG_TERMINATE_THREAD

/// Debugger terminated process.
pub const TERMINATE_PROCESS : ErrorCode = ErrorCode::from_constant(692); // ERROR_DBG_TERMINATE_PROCESS

/// Debugger got control C.
pub const CONTROL_C : ErrorCode = ErrorCode::from_constant(693); // ERROR_DBG_CONTROL_C

/// Debugger printed exception on control C.
pub const PRINTEXCEPTION_C : ErrorCode = ErrorCode::from_constant(694); // ERROR_DBG_PRINTEXCEPTION_C

/// Debugger received RIP exception.
pub const RIPEXCEPTION : ErrorCode = ErrorCode::from_constant(695); // ERROR_DBG_RIPEXCEPTION

/// Debugger received control break.
pub const CONTROL_BREAK : ErrorCode = ErrorCode::from_constant(696); // ERROR_DBG_CONTROL_BREAK

/// Debugger command communication exception.
pub const COMMAND_EXCEPTION : ErrorCode = ErrorCode::from_constant(697); // ERROR_DBG_COMMAND_EXCEPTION

/// Debugger handled exception
pub const EXCEPTION_HANDLED : ErrorCode = ErrorCode::from_constant(766); // ERROR_DBG_EXCEPTION_HANDLED

/// Debugger continued
pub const CONTINUE : ErrorCode = ErrorCode::from_constant(767); // ERROR_DBG_CONTINUE

/// Could not create new process from ARM architecture device.
pub const CREATE_PROCESS_FAILURE_LOCKDOWN : HResultError = HResultError::from_constant(0x80B00001); // ERROR_DBG_CREATE_PROCESS_FAILURE_LOCKDOWN

/// Could not attach to the application process from ARM architecture device.
pub const ATTACH_PROCESS_FAILURE_LOCKDOWN : HResultError = HResultError::from_constant(0x80B00002); // ERROR_DBG_ATTACH_PROCESS_FAILURE_LOCKDOWN

/// Could not connect to dbgsrv server from ARM architecture device.
pub const CONNECT_SERVER_FAILURE_LOCKDOWN : HResultError = HResultError::from_constant(0x80B00003); // ERROR_DBG_CONNECT_SERVER_FAILURE_LOCKDOWN

/// Could not start dbgsrv server from ARM architecture device.
pub const START_SERVER_FAILURE_LOCKDOWN : HResultError = HResultError::from_constant(0x80B00004); // ERROR_DBG_START_SERVER_FAILURE_LOCKDOWN
