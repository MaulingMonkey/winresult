// WARNING: this file is auto-generated by xtask gen and may be overwritten

use super::*;

pub const OUT_OF_HANDLES : ErrorCode = ErrorCode::from_constant(12001); // ERROR_WINHTTP_OUT_OF_HANDLES
pub const TIMEOUT : ErrorCode = ErrorCode::from_constant(12002); // ERROR_WINHTTP_TIMEOUT
pub const INTERNAL_ERROR : ErrorCode = ErrorCode::from_constant(12004); // ERROR_WINHTTP_INTERNAL_ERROR
pub const INVALID_URL : ErrorCode = ErrorCode::from_constant(12005); // ERROR_WINHTTP_INVALID_URL
pub const UNRECOGNIZED_SCHEME : ErrorCode = ErrorCode::from_constant(12006); // ERROR_WINHTTP_UNRECOGNIZED_SCHEME
pub const NAME_NOT_RESOLVED : ErrorCode = ErrorCode::from_constant(12007); // ERROR_WINHTTP_NAME_NOT_RESOLVED
pub const INVALID_OPTION : ErrorCode = ErrorCode::from_constant(12009); // ERROR_WINHTTP_INVALID_OPTION
pub const OPTION_NOT_SETTABLE : ErrorCode = ErrorCode::from_constant(12011); // ERROR_WINHTTP_OPTION_NOT_SETTABLE
pub const SHUTDOWN : ErrorCode = ErrorCode::from_constant(12012); // ERROR_WINHTTP_SHUTDOWN
pub const LOGIN_FAILURE : ErrorCode = ErrorCode::from_constant(12015); // ERROR_WINHTTP_LOGIN_FAILURE
pub const OPERATION_CANCELLED : ErrorCode = ErrorCode::from_constant(12017); // ERROR_WINHTTP_OPERATION_CANCELLED
pub const INCORRECT_HANDLE_TYPE : ErrorCode = ErrorCode::from_constant(12018); // ERROR_WINHTTP_INCORRECT_HANDLE_TYPE
pub const INCORRECT_HANDLE_STATE : ErrorCode = ErrorCode::from_constant(12019); // ERROR_WINHTTP_INCORRECT_HANDLE_STATE
pub const CANNOT_CONNECT : ErrorCode = ErrorCode::from_constant(12029); // ERROR_WINHTTP_CANNOT_CONNECT
pub const CONNECTION_ERROR : ErrorCode = ErrorCode::from_constant(12030); // ERROR_WINHTTP_CONNECTION_ERROR
pub const RESEND_REQUEST : ErrorCode = ErrorCode::from_constant(12032); // ERROR_WINHTTP_RESEND_REQUEST
pub const CLIENT_AUTH_CERT_NEEDED : ErrorCode = ErrorCode::from_constant(12044); // ERROR_WINHTTP_CLIENT_AUTH_CERT_NEEDED

/// WinHttpRequest Component errors
pub const CANNOT_CALL_BEFORE_OPEN : ErrorCode = ErrorCode::from_constant(12100); // ERROR_WINHTTP_CANNOT_CALL_BEFORE_OPEN

/// WinHttpRequest Component errors
pub const CANNOT_CALL_BEFORE_SEND : ErrorCode = ErrorCode::from_constant(12101); // ERROR_WINHTTP_CANNOT_CALL_BEFORE_SEND

/// WinHttpRequest Component errors
pub const CANNOT_CALL_AFTER_SEND : ErrorCode = ErrorCode::from_constant(12102); // ERROR_WINHTTP_CANNOT_CALL_AFTER_SEND

/// WinHttpRequest Component errors
pub const CANNOT_CALL_AFTER_OPEN : ErrorCode = ErrorCode::from_constant(12103); // ERROR_WINHTTP_CANNOT_CALL_AFTER_OPEN

pub const HEADER_NOT_FOUND : ErrorCode = ErrorCode::from_constant(12150); // ERROR_WINHTTP_HEADER_NOT_FOUND
pub const INVALID_SERVER_RESPONSE : ErrorCode = ErrorCode::from_constant(12152); // ERROR_WINHTTP_INVALID_SERVER_RESPONSE
pub const INVALID_HEADER : ErrorCode = ErrorCode::from_constant(12153); // ERROR_WINHTTP_INVALID_HEADER
pub const INVALID_QUERY_REQUEST : ErrorCode = ErrorCode::from_constant(12154); // ERROR_WINHTTP_INVALID_QUERY_REQUEST
pub const HEADER_ALREADY_EXISTS : ErrorCode = ErrorCode::from_constant(12155); // ERROR_WINHTTP_HEADER_ALREADY_EXISTS
pub const REDIRECT_FAILED : ErrorCode = ErrorCode::from_constant(12156); // ERROR_WINHTTP_REDIRECT_FAILED
pub const AUTO_PROXY_SERVICE_ERROR : ErrorCode = ErrorCode::from_constant(12178); // ERROR_WINHTTP_AUTO_PROXY_SERVICE_ERROR
pub const BAD_AUTO_PROXY_SCRIPT : ErrorCode = ErrorCode::from_constant(12166); // ERROR_WINHTTP_BAD_AUTO_PROXY_SCRIPT
pub const UNABLE_TO_DOWNLOAD_SCRIPT : ErrorCode = ErrorCode::from_constant(12167); // ERROR_WINHTTP_UNABLE_TO_DOWNLOAD_SCRIPT
pub const UNHANDLED_SCRIPT_TYPE : ErrorCode = ErrorCode::from_constant(12176); // ERROR_WINHTTP_UNHANDLED_SCRIPT_TYPE
pub const SCRIPT_EXECUTION_ERROR : ErrorCode = ErrorCode::from_constant(12177); // ERROR_WINHTTP_SCRIPT_EXECUTION_ERROR
pub const NOT_INITIALIZED : ErrorCode = ErrorCode::from_constant(12172); // ERROR_WINHTTP_NOT_INITIALIZED
pub const SECURE_FAILURE : ErrorCode = ErrorCode::from_constant(12175); // ERROR_WINHTTP_SECURE_FAILURE

/// Certificate security errors. These are raised only by the WinHttpRequest
/// component. The WinHTTP Win32 API will return ERROR_WINHTTP_SECURE_FAILE and
/// provide additional information via the WINHTTP_CALLBACK_STATUS_SECURE_FAILURE
/// callback notification.
pub const SECURE_CERT_DATE_INVALID : ErrorCode = ErrorCode::from_constant(12037); // ERROR_WINHTTP_SECURE_CERT_DATE_INVALID

/// Certificate security errors. These are raised only by the WinHttpRequest
/// component. The WinHTTP Win32 API will return ERROR_WINHTTP_SECURE_FAILE and
/// provide additional information via the WINHTTP_CALLBACK_STATUS_SECURE_FAILURE
/// callback notification.
pub const SECURE_CERT_CN_INVALID : ErrorCode = ErrorCode::from_constant(12038); // ERROR_WINHTTP_SECURE_CERT_CN_INVALID

/// Certificate security errors. These are raised only by the WinHttpRequest
/// component. The WinHTTP Win32 API will return ERROR_WINHTTP_SECURE_FAILE and
/// provide additional information via the WINHTTP_CALLBACK_STATUS_SECURE_FAILURE
/// callback notification.
pub const SECURE_INVALID_CA : ErrorCode = ErrorCode::from_constant(12045); // ERROR_WINHTTP_SECURE_INVALID_CA

/// Certificate security errors. These are raised only by the WinHttpRequest
/// component. The WinHTTP Win32 API will return ERROR_WINHTTP_SECURE_FAILE and
/// provide additional information via the WINHTTP_CALLBACK_STATUS_SECURE_FAILURE
/// callback notification.
pub const SECURE_CERT_REV_FAILED : ErrorCode = ErrorCode::from_constant(12057); // ERROR_WINHTTP_SECURE_CERT_REV_FAILED

/// Certificate security errors. These are raised only by the WinHttpRequest
/// component. The WinHTTP Win32 API will return ERROR_WINHTTP_SECURE_FAILE and
/// provide additional information via the WINHTTP_CALLBACK_STATUS_SECURE_FAILURE
/// callback notification.
pub const SECURE_CHANNEL_ERROR : ErrorCode = ErrorCode::from_constant(12157); // ERROR_WINHTTP_SECURE_CHANNEL_ERROR

/// Certificate security errors. These are raised only by the WinHttpRequest
/// component. The WinHTTP Win32 API will return ERROR_WINHTTP_SECURE_FAILE and
/// provide additional information via the WINHTTP_CALLBACK_STATUS_SECURE_FAILURE
/// callback notification.
pub const SECURE_INVALID_CERT : ErrorCode = ErrorCode::from_constant(12169); // ERROR_WINHTTP_SECURE_INVALID_CERT

/// Certificate security errors. These are raised only by the WinHttpRequest
/// component. The WinHTTP Win32 API will return ERROR_WINHTTP_SECURE_FAILE and
/// provide additional information via the WINHTTP_CALLBACK_STATUS_SECURE_FAILURE
/// callback notification.
pub const SECURE_CERT_REVOKED : ErrorCode = ErrorCode::from_constant(12170); // ERROR_WINHTTP_SECURE_CERT_REVOKED

/// Certificate security errors. These are raised only by the WinHttpRequest
/// component. The WinHTTP Win32 API will return ERROR_WINHTTP_SECURE_FAILE and
/// provide additional information via the WINHTTP_CALLBACK_STATUS_SECURE_FAILURE
/// callback notification.
pub const SECURE_CERT_WRONG_USAGE : ErrorCode = ErrorCode::from_constant(12179); // ERROR_WINHTTP_SECURE_CERT_WRONG_USAGE

pub const AUTODETECTION_FAILED : ErrorCode = ErrorCode::from_constant(12180); // ERROR_WINHTTP_AUTODETECTION_FAILED
pub const HEADER_COUNT_EXCEEDED : ErrorCode = ErrorCode::from_constant(12181); // ERROR_WINHTTP_HEADER_COUNT_EXCEEDED
pub const HEADER_SIZE_OVERFLOW : ErrorCode = ErrorCode::from_constant(12182); // ERROR_WINHTTP_HEADER_SIZE_OVERFLOW
pub const CHUNKED_ENCODING_HEADER_SIZE_OVERFLOW : ErrorCode = ErrorCode::from_constant(12183); // ERROR_WINHTTP_CHUNKED_ENCODING_HEADER_SIZE_OVERFLOW
pub const RESPONSE_DRAIN_OVERFLOW : ErrorCode = ErrorCode::from_constant(12184); // ERROR_WINHTTP_RESPONSE_DRAIN_OVERFLOW
pub const CLIENT_CERT_NO_PRIVATE_KEY : ErrorCode = ErrorCode::from_constant(12185); // ERROR_WINHTTP_CLIENT_CERT_NO_PRIVATE_KEY
pub const CLIENT_CERT_NO_ACCESS_PRIVATE_KEY : ErrorCode = ErrorCode::from_constant(12186); // ERROR_WINHTTP_CLIENT_CERT_NO_ACCESS_PRIVATE_KEY
pub const CLIENT_AUTH_CERT_NEEDED_PROXY : ErrorCode = ErrorCode::from_constant(12187); // ERROR_WINHTTP_CLIENT_AUTH_CERT_NEEDED_PROXY
pub const SECURE_FAILURE_PROXY : ErrorCode = ErrorCode::from_constant(12188); // ERROR_WINHTTP_SECURE_FAILURE_PROXY
pub const RESERVED_189 : ErrorCode = ErrorCode::from_constant(12189); // ERROR_WINHTTP_RESERVED_189
pub const HTTP_PROTOCOL_MISMATCH : ErrorCode = ErrorCode::from_constant(12190); // ERROR_WINHTTP_HTTP_PROTOCOL_MISMATCH
