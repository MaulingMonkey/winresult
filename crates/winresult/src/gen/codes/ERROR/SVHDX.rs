// WARNING: this file is auto-generated by xtask gen and may be overwritten

use super::*;


/// The proper error code with sense data was stored on server side.
pub const ERROR_STORED : ErrorHResult = ErrorHResult::from_constant(0xC05C0000); // ERROR_SVHDX_ERROR_STORED

/// The requested error data is not available on the server.
pub const ERROR_NOT_AVAILABLE : ErrorHResult = ErrorHResult::from_constant(0xC05CFF00); // ERROR_SVHDX_ERROR_NOT_AVAILABLE

/// Unit Attention data is available for the initiator to query.
pub const UNIT_ATTENTION_AVAILABLE : ErrorHResult = ErrorHResult::from_constant(0xC05CFF01); // ERROR_SVHDX_UNIT_ATTENTION_AVAILABLE

/// The data capacity of the device has changed, resulting in a Unit Attention condition.
pub const UNIT_ATTENTION_CAPACITY_DATA_CHANGED : ErrorHResult = ErrorHResult::from_constant(0xC05CFF02); // ERROR_SVHDX_UNIT_ATTENTION_CAPACITY_DATA_CHANGED

/// A previous operation resulted in this initiator's reservations being preempted, resulting in a Unit Attention condition.
pub const UNIT_ATTENTION_RESERVATIONS_PREEMPTED : ErrorHResult = ErrorHResult::from_constant(0xC05CFF03); // ERROR_SVHDX_UNIT_ATTENTION_RESERVATIONS_PREEMPTED

/// A previous operation resulted in this initiator's reservations being released, resulting in a Unit Attention condition.
pub const UNIT_ATTENTION_RESERVATIONS_RELEASED : ErrorHResult = ErrorHResult::from_constant(0xC05CFF04); // ERROR_SVHDX_UNIT_ATTENTION_RESERVATIONS_RELEASED

/// A previous operation resulted in this initiator's registrations being preempted, resulting in a Unit Attention condition.
pub const UNIT_ATTENTION_REGISTRATIONS_PREEMPTED : ErrorHResult = ErrorHResult::from_constant(0xC05CFF05); // ERROR_SVHDX_UNIT_ATTENTION_REGISTRATIONS_PREEMPTED

/// The data storage format of the device has changed, resulting in a Unit Attention condition.
pub const UNIT_ATTENTION_OPERATING_DEFINITION_CHANGED : ErrorHResult = ErrorHResult::from_constant(0xC05CFF06); // ERROR_SVHDX_UNIT_ATTENTION_OPERATING_DEFINITION_CHANGED

/// The current initiator is not allowed to perform the SCSI command because of a reservation conflict.
pub const RESERVATION_CONFLICT : ErrorHResult = ErrorHResult::from_constant(0xC05CFF07); // ERROR_SVHDX_RESERVATION_CONFLICT

/// Multiple virtual machines sharing a virtual hard disk is supported only on Fixed or Dynamic VHDX format virtual hard disks.
pub const WRONG_FILE_TYPE : ErrorHResult = ErrorHResult::from_constant(0xC05CFF08); // ERROR_SVHDX_WRONG_FILE_TYPE

/// The server version does not match the requested version.
pub const VERSION_MISMATCH : ErrorHResult = ErrorHResult::from_constant(0xC05CFF09); // ERROR_SVHDX_VERSION_MISMATCH

/// Invalid Shared VHDX open due to lack of initiator ID. Check for related Continuous Availability failures.
pub const NO_INITIATOR : ErrorHResult = ErrorHResult::from_constant(0xC05CFF0B); // ERROR_SVHDX_NO_INITIATOR
