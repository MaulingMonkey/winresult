// WARNING: this file is auto-generated by xtask gen and may be overwritten

use super::*;


/// Manifest Parse Error : A string literal was expected, but no opening quote character was found.
pub const E_MISSINGQUOTE : ErrorCode = ErrorCode::from_constant(14030); // ERROR_SXS_XML_E_MISSINGQUOTE

/// Manifest Parse Error : Incorrect syntax was used in a comment.
pub const E_COMMENTSYNTAX : ErrorCode = ErrorCode::from_constant(14031); // ERROR_SXS_XML_E_COMMENTSYNTAX

/// Manifest Parse Error : A name was started with an invalid character.
pub const E_BADSTARTNAMECHAR : ErrorCode = ErrorCode::from_constant(14032); // ERROR_SXS_XML_E_BADSTARTNAMECHAR

/// Manifest Parse Error : A name contained an invalid character.
pub const E_BADNAMECHAR : ErrorCode = ErrorCode::from_constant(14033); // ERROR_SXS_XML_E_BADNAMECHAR

/// Manifest Parse Error : A string literal contained an invalid character.
pub const E_BADCHARINSTRING : ErrorCode = ErrorCode::from_constant(14034); // ERROR_SXS_XML_E_BADCHARINSTRING

/// Manifest Parse Error : Invalid syntax for an xml declaration.
pub const E_XMLDECLSYNTAX : ErrorCode = ErrorCode::from_constant(14035); // ERROR_SXS_XML_E_XMLDECLSYNTAX

/// Manifest Parse Error : An Invalid character was found in text content.
pub const E_BADCHARDATA : ErrorCode = ErrorCode::from_constant(14036); // ERROR_SXS_XML_E_BADCHARDATA

/// Manifest Parse Error : Required white space was missing.
pub const E_MISSINGWHITESPACE : ErrorCode = ErrorCode::from_constant(14037); // ERROR_SXS_XML_E_MISSINGWHITESPACE

/// Manifest Parse Error : The character '>' was expected.
pub const E_EXPECTINGTAGEND : ErrorCode = ErrorCode::from_constant(14038); // ERROR_SXS_XML_E_EXPECTINGTAGEND

/// Manifest Parse Error : A semi colon character was expected.
pub const E_MISSINGSEMICOLON : ErrorCode = ErrorCode::from_constant(14039); // ERROR_SXS_XML_E_MISSINGSEMICOLON

/// Manifest Parse Error : Unbalanced parentheses.
pub const E_UNBALANCEDPAREN : ErrorCode = ErrorCode::from_constant(14040); // ERROR_SXS_XML_E_UNBALANCEDPAREN

/// Manifest Parse Error : Internal error.
pub const E_INTERNALERROR : ErrorCode = ErrorCode::from_constant(14041); // ERROR_SXS_XML_E_INTERNALERROR

/// Manifest Parse Error : Whitespace is not allowed at this location.
pub const E_UNEXPECTED_WHITESPACE : ErrorCode = ErrorCode::from_constant(14042); // ERROR_SXS_XML_E_UNEXPECTED_WHITESPACE

/// Manifest Parse Error : End of file reached in invalid state for current encoding.
pub const E_INCOMPLETE_ENCODING : ErrorCode = ErrorCode::from_constant(14043); // ERROR_SXS_XML_E_INCOMPLETE_ENCODING

/// Manifest Parse Error : Missing parenthesis.
pub const E_MISSING_PAREN : ErrorCode = ErrorCode::from_constant(14044); // ERROR_SXS_XML_E_MISSING_PAREN

/// Manifest Parse Error : A single or double closing quote character (\' or \") is missing.
pub const E_EXPECTINGCLOSEQUOTE : ErrorCode = ErrorCode::from_constant(14045); // ERROR_SXS_XML_E_EXPECTINGCLOSEQUOTE

/// Manifest Parse Error : Multiple colons are not allowed in a name.
pub const E_MULTIPLE_COLONS : ErrorCode = ErrorCode::from_constant(14046); // ERROR_SXS_XML_E_MULTIPLE_COLONS

/// Manifest Parse Error : Invalid character for decimal digit.
pub const E_INVALID_DECIMAL : ErrorCode = ErrorCode::from_constant(14047); // ERROR_SXS_XML_E_INVALID_DECIMAL

/// Manifest Parse Error : Invalid character for hexadecimal digit.
pub const E_INVALID_HEXIDECIMAL : ErrorCode = ErrorCode::from_constant(14048); // ERROR_SXS_XML_E_INVALID_HEXIDECIMAL

/// Manifest Parse Error : Invalid unicode character value for this platform.
pub const E_INVALID_UNICODE : ErrorCode = ErrorCode::from_constant(14049); // ERROR_SXS_XML_E_INVALID_UNICODE

/// Manifest Parse Error : Expecting whitespace or '?'.
pub const E_WHITESPACEORQUESTIONMARK : ErrorCode = ErrorCode::from_constant(14050); // ERROR_SXS_XML_E_WHITESPACEORQUESTIONMARK

/// Manifest Parse Error : End tag was not expected at this location.
pub const E_UNEXPECTEDENDTAG : ErrorCode = ErrorCode::from_constant(14051); // ERROR_SXS_XML_E_UNEXPECTEDENDTAG

/// Manifest Parse Error : The following tags were not closed: `%1`.
pub const E_UNCLOSEDTAG : ErrorCode = ErrorCode::from_constant(14052); // ERROR_SXS_XML_E_UNCLOSEDTAG

/// Manifest Parse Error : Duplicate attribute.
pub const E_DUPLICATEATTRIBUTE : ErrorCode = ErrorCode::from_constant(14053); // ERROR_SXS_XML_E_DUPLICATEATTRIBUTE

/// Manifest Parse Error : Only one top level element is allowed in an XML document.
pub const E_MULTIPLEROOTS : ErrorCode = ErrorCode::from_constant(14054); // ERROR_SXS_XML_E_MULTIPLEROOTS

/// Manifest Parse Error : Invalid at the top level of the document.
pub const E_INVALIDATROOTLEVEL : ErrorCode = ErrorCode::from_constant(14055); // ERROR_SXS_XML_E_INVALIDATROOTLEVEL

/// Manifest Parse Error : Invalid xml declaration.
pub const E_BADXMLDECL : ErrorCode = ErrorCode::from_constant(14056); // ERROR_SXS_XML_E_BADXMLDECL

/// Manifest Parse Error : XML document must have a top level element.
pub const E_MISSINGROOT : ErrorCode = ErrorCode::from_constant(14057); // ERROR_SXS_XML_E_MISSINGROOT

/// Manifest Parse Error : Unexpected end of file.
pub const E_UNEXPECTEDEOF : ErrorCode = ErrorCode::from_constant(14058); // ERROR_SXS_XML_E_UNEXPECTEDEOF

/// Manifest Parse Error : Parameter entities cannot be used inside markup declarations in an internal subset.
pub const E_BADPEREFINSUBSET : ErrorCode = ErrorCode::from_constant(14059); // ERROR_SXS_XML_E_BADPEREFINSUBSET

/// Manifest Parse Error : Element was not closed.
pub const E_UNCLOSEDSTARTTAG : ErrorCode = ErrorCode::from_constant(14060); // ERROR_SXS_XML_E_UNCLOSEDSTARTTAG

/// Manifest Parse Error : End element was missing the character '>'.
pub const E_UNCLOSEDENDTAG : ErrorCode = ErrorCode::from_constant(14061); // ERROR_SXS_XML_E_UNCLOSEDENDTAG

/// Manifest Parse Error : A string literal was not closed.
pub const E_UNCLOSEDSTRING : ErrorCode = ErrorCode::from_constant(14062); // ERROR_SXS_XML_E_UNCLOSEDSTRING

/// Manifest Parse Error : A comment was not closed.
pub const E_UNCLOSEDCOMMENT : ErrorCode = ErrorCode::from_constant(14063); // ERROR_SXS_XML_E_UNCLOSEDCOMMENT

/// Manifest Parse Error : A declaration was not closed.
pub const E_UNCLOSEDDECL : ErrorCode = ErrorCode::from_constant(14064); // ERROR_SXS_XML_E_UNCLOSEDDECL

/// Manifest Parse Error : A CDATA section was not closed.
pub const E_UNCLOSEDCDATA : ErrorCode = ErrorCode::from_constant(14065); // ERROR_SXS_XML_E_UNCLOSEDCDATA

/// Manifest Parse Error : The namespace prefix is not allowed to start with the reserved string "xml".
pub const E_RESERVEDNAMESPACE : ErrorCode = ErrorCode::from_constant(14066); // ERROR_SXS_XML_E_RESERVEDNAMESPACE

/// Manifest Parse Error : System does not support the specified encoding.
pub const E_INVALIDENCODING : ErrorCode = ErrorCode::from_constant(14067); // ERROR_SXS_XML_E_INVALIDENCODING

/// Manifest Parse Error : Switch from current encoding to specified encoding not supported.
pub const E_INVALIDSWITCH : ErrorCode = ErrorCode::from_constant(14068); // ERROR_SXS_XML_E_INVALIDSWITCH

/// Manifest Parse Error : The name 'xml' is reserved and must be lower case.
pub const E_BADXMLCASE : ErrorCode = ErrorCode::from_constant(14069); // ERROR_SXS_XML_E_BADXMLCASE

/// Manifest Parse Error : The standalone attribute must have the value 'yes' or 'no'.
pub const E_INVALID_STANDALONE : ErrorCode = ErrorCode::from_constant(14070); // ERROR_SXS_XML_E_INVALID_STANDALONE

/// Manifest Parse Error : The standalone attribute cannot be used in external entities.
pub const E_UNEXPECTED_STANDALONE : ErrorCode = ErrorCode::from_constant(14071); // ERROR_SXS_XML_E_UNEXPECTED_STANDALONE

/// Manifest Parse Error : Invalid version number.
pub const E_INVALID_VERSION : ErrorCode = ErrorCode::from_constant(14072); // ERROR_SXS_XML_E_INVALID_VERSION

/// Manifest Parse Error : Missing equals sign between attribute and attribute value.
pub const E_MISSINGEQUALS : ErrorCode = ErrorCode::from_constant(14073); // ERROR_SXS_XML_E_MISSINGEQUALS
